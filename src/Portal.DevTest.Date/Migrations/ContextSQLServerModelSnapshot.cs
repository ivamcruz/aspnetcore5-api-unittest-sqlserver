// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Portal.DevTest.Date.Context;

namespace Portal.DevTest.Date.Migrations
{
    [DbContext(typeof(ContextSQLServer))]
    partial class ContextSQLServerModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Portal.DevTest.Date.Model.OrderItemModel", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(40)")
                        .HasColumnName("id");

                    b.Property<decimal>("Amount")
                        .HasPrecision(6, 2)
                        .HasColumnType("decimal(6,2)")
                        .HasColumnName("amount");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CurrentPrice")
                        .HasPrecision(6, 5)
                        .HasColumnType("decimal(6,5)")
                        .HasColumnName("currentPrice");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("isActived");

                    b.Property<string>("OrderId")
                        .IsRequired()
                        .HasColumnType("varchar(40)")
                        .HasColumnName("idOrder");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("varchar(40)")
                        .HasColumnName("idProduct");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("tb_orderItems");
                });

            modelBuilder.Entity("Portal.DevTest.Date.Model.OrderModel", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(40)")
                        .HasColumnName("idOrder");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("isActived");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("varchar(40)")
                        .HasColumnName("idUser");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("tb_orders");
                });

            modelBuilder.Entity("Portal.DevTest.Date.Model.ProductModel", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(40)")
                        .HasColumnName("idProduct");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("isActived");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(60)")
                        .HasColumnName("name");

                    b.Property<double>("Price")
                        .HasPrecision(2, 7)
                        .HasColumnType("float(2)")
                        .HasColumnName("price");

                    b.HasKey("Id");

                    b.ToTable("tb_products");
                });

            modelBuilder.Entity("Portal.DevTest.Date.Model.UserModel", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(40)")
                        .HasColumnName("idUser");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("varchar(60)")
                        .HasColumnName("displayName");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("isActived");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("password");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("userName");

                    b.HasKey("Id");

                    b.ToTable("tb_users");
                });

            modelBuilder.Entity("Portal.DevTest.Date.Model.OrderItemModel", b =>
                {
                    b.HasOne("Portal.DevTest.Date.Model.OrderModel", "Order")
                        .WithMany("lstOrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Portal.DevTest.Date.Model.ProductModel", "Product")
                        .WithMany("lstOrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Portal.DevTest.Date.Model.OrderModel", b =>
                {
                    b.HasOne("Portal.DevTest.Date.Model.UserModel", "User")
                        .WithMany("lstOrders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Portal.DevTest.Date.Model.OrderModel", b =>
                {
                    b.Navigation("lstOrderItems");
                });

            modelBuilder.Entity("Portal.DevTest.Date.Model.ProductModel", b =>
                {
                    b.Navigation("lstOrderItems");
                });

            modelBuilder.Entity("Portal.DevTest.Date.Model.UserModel", b =>
                {
                    b.Navigation("lstOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
